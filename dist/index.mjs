var P=Object.defineProperty;var R=(e,t,n)=>t in e?P(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var I=(e,t,n)=>(R(e,typeof t!="symbol"?t+"":t,n),n);import{registerPlugin as w}from"@capacitor/core";import{FacebookAuthProvider as h,GoogleAuthProvider as m,OAuthProvider as y,PhoneAuthProvider as f,TwitterAuthProvider as S,getAuth as d,linkWithCredential as b,signInWithCredential as v}from"firebase/auth";var O=w("CapacitorFirebaseAuth",{web:async()=>({signIn:async()=>{throw new Error("web not implemented")},link:async()=>{throw new Error("web not implemented")},signOut:async()=>{throw new Error("web not implemented")}})}),c=O;var p=class extends y{constructor(){super(p.PROVIDER_ID)}},a=p;I(a,"PROVIDER_ID","apple.com");var s=(e,t)=>({providerId:e.PROVIDER_ID,Provider:e,buildCredential:t}),g={["google.com"]:s(m,({idToken:e},t)=>t.credential(e)),["apple.com"]:s(a,({idToken:e,rawNonce:t},n)=>{let r=new n;return r.addScope("email"),r.addScope("name"),r.credential({idToken:e,rawNonce:t})}),["facebook.com"]:s(h,({idToken:e},t)=>t.credential(e)),["twitter.com"]:s(S,({idToken:e,secret:t},n)=>n.credential(e,t)),phone:s(f,({verificationId:e,verificationCode:t},n)=>t?n.credential(e,t):null)},x=async(e,...[t])=>{let n=g[e];if(!n)throw new Error(`Provider ${e} not found`);let{Provider:r,buildCredential:l}=n,o=await c.signIn({providerId:e,data:t}),i=await l(o,r);return i?{userCredential:await v(d(),i),result:o}:null},V=async(e,...[t])=>{let n=g[e];if(!n)throw new Error(`Provider ${e} not found`);let{Provider:r,buildCredential:l}=n,o=await c.link({providerId:e,data:t}),i=await l(o,r);if(!i)return null;let u=d().currentUser;if(!u)throw new Error("No user to link to");return{userCredential:await b(u,i),result:o}},_=async()=>{await c.signOut({}),await d().signOut()};export{O as CapacitorFirebaseAuth,V as link,x as signIn,_ as signOut};
//# sourceMappingURL=index.mjs.map